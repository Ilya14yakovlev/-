#include <vector>

#include <algorithm>

#include <iostream>

std::vector<int> increase_vector(std::vector<int> vec, int n) {

    std::transform(vec.begin(), vec.end(), vec.begin(), [=](int x) { return x + n; });

    return vec;

}



void test_increase_vector() {

    std::vector<int> result = increase_vector({1, 2, 3}, 5);

    assert(result == std::vector<int>{6, 7, 8});

    result = increase_vector({-1, 0, 1}, 3);

    assert(result == std::vector<int>{2, 3, 4});

    result = increase_vector({}, 10);

    assert(result.empty());

}

int main() {

    test_increase_vector();

    std::cout << "All tests passed!" << std::endl;

    return 0;

}
